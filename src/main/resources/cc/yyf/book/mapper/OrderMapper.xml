<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cc.yyf.book.mapper.OrderMapper">


    <!-- 查询订单时用到的映射关系 -->
    <resultMap id="userOrder" type="userOrder">
        <id property="orderId" column="orderId"/>
        <result property="studentCode" column="buyer"/>
        <result property="bookId" column="bookId"/>
        <result property="buyDate" column="buyDate"/>
        <result property="orderStatus" column="orderStatus" typeHandler="cc.yyf.book.typeHandler.OrderEnumTypeHandler"/>
        <association property="book" javaType="cc.yyf.book.pojo.Book">
            <id property="bookId" column="bookId"/>
            <result property="studentCode" column="studentCode"/>
            <result property="bookName" column="bookName"/>
            <result property="stock" column="stock"/>
            <result property="bookStyle" column="bookStyle" typeHandler="cc.yyf.book.typeHandler.MyTypeHandler"/>
            <result property="bookIntroduction" column="bookIntroduction"/>
            <result property="bookSrc" column="bookSrc"/>
            <result property="userName" column="userName"/>
            <result property="bookDate" column="bookDate"/>
            <result property="price" column="price"/>
        </association>
    </resultMap>



    <!-- 添加订单 -->
    <insert id="insertBookOrder" parameterType="userOrder">
         insert into userOrder values(default, #{studentCode},
        #{bookId}, #{buyDate},
        #{orderStatus, typeHandler = cc.yyf.book.typeHandler.OrderEnumTypeHandler}, #{orderEndTime});
    </insert>

    <!-- 获取订单 -->
    <select id="searchOrder" resultMap="userOrder">
        select b.*, u.userName, o.studentCode buyer, o.orderId, o.buyDate, o.orderStatus, o.bookId
        from userOrder o
        left join book b
        on o.bookId = b.bookId
        left join user u
        on b.studentCode = u.studentCode
        where o.studentCode = #{studentCode}
        order by o.buyDate desc
        limit #{from}, #{size};
    </select>

    <!-- 根据订单类别获取订单 -->
    <select id="searchOrderByStyle" resultMap="userOrder">
        select b.*, u.userName, o.studentCode buyer, o.orderId, o.buyDate, o.orderStatus, o.bookId
        from userOrder o
        left join book b
        on o.bookId = b.bookId
        left join user u
        on b.studentCode = u.studentCode
        where o.studentCode = #{studentCode} and o.orderStatus = #{status}
        order by o.buyDate desc
        limit #{from}, #{size};
    </select>

    <!-- 用户直接从商品主页付款 -->
    <insert id="buyBook" parameterType="userOrder">
        insert into userOrder
        values(default, #{studentCode}, #{bookId}, #{buyDate},
        #{orderStatus, typeHandler = cc.yyf.book.typeHandler.OrderEnumTypeHandler}, default);
    </insert>

    <!-- 取消一个待支付的订单 -->
    <update id="cancelOrder">
        update userOrder
        set orderStatus = #{newStatus, typeHandler = cc.yyf.book.typeHandler.OrderEnumTypeHandler}
        where studentCode = #{studentCode} and orderId = #{orderId} and orderStatus = #{oldStatus, typeHandler = cc.yyf.book.typeHandler.OrderEnumTypeHandler};
    </update>

    <!-- 通过orderID查找bookId -->
    <select id="getBookIdByOrderId" resultType="int">
        select bookId from userOrder where orderId = #{orderId};
    </select>


</mapper>